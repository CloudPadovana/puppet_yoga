#class compute_yoga::params {
class compute_yoga::params ($cloud_role) {
########creando la classe cloud_prod con parametro cloud_role posso introdurre la condizione production, test o qualunque altro tipo di cloud semplicemente sovrascrivendo via foreman il valore della variabile. Qui andrebbe ovviamente inserito un if per ogni tipo di cloud utilizzata con i parametri caratteristici della cloud

####
#  $approved_role = [
#    'is_test',
#    'is_prod_sharedstorage',
#    'is_prod_localstorage'
#  ]

#  validate_string($cloud_role, $approved_role)

###

  yumrepo { "EGI_CERT":
                 baseurl => "http://repository.egi.eu/sw/production/cas/1/current/",
                 descr => "EGI CERT repos",
                 enabled => 1,
                 gpgcheck => 0
            }

   file { '/etc/grid-security/certificates/INFN-CA-2015.pem':
         ensure   => present,
         require    => Package["ca_INFN-CA-2015"],
        }

   package { 'ca_INFN-CA-2015':
              ensure => 'latest',
              require => Yumrepo["EGI_CERT"]
           }



if $::compute_yoga::cloud_role == "is_prod_localstorage" or $::compute_yoga::cloud_role == "is_prod_sharedstorage" {

   ### Setting per la cloud di produzione
  $disk_allocation_ratio = '' 
  $endpoint_template = 'http://:xxxxxx:8776/v2/%(project_id)s' 
  $glance_api_servers   = ''   
  $influxdb_collectd_host = ""
  $influxdb_collectd_port = ""
  $libvirt_rbd_key = ''
  $libvirt_rbd_secret_uuid = ''
  $libvirt_rbd_user = ''
  $memcached_servers    = ''
  $neutron_auth_url = 'http://xxx.xxx.xxx.xxx:5000'
  $neutron_endpoint_override = ''   
  $neutron_keystone_authtoken_auth_url = 'http://xxx.xxx.xxx.xxx:5000'
  $neutron_password   = ''
  $nova_keystone_authtoken_auth_url = 'http://xxx.xxx.xxx.xxx:5000'
  $nova_placement_auth_url = 'http://xxx.xxx.xxx.xxx:5000/v3'
  $nova_password  = ''
  $novncproxy_base_url = 'https://xxxxxx:6080/vnc_auto.html'
  $placement_password = ''
  $placement_username = 'placement'
  $private_key          = 'id_rsa_ctrl-01'     
  $project_name         = 'services'
  $pub_key              = "ssh-rsa "
  $transport_url = ''
  $www_authenticate_uri = 'https://xxx.xxx.xxx.xxx:443'

                                     }  

 if $::compute_yoga::cloud_role == "is_test" {

   ### Setting per la cloud di test
  $disk_allocation_ratio = '5.0'
  $endpoint_template = 'http://:xxxxxx:8776/v2/%(project_id)s' 
  $glance_api_servers   = 'http://xxxx:9292'
  $influxdb_collectd_host = ""
  $influxdb_collectd_port = ""
  $libvirt_rbd_key = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxx=='
  $libvirt_rbd_secret_uuid = ''
  $libvirt_rbd_user = 'cinder-cloudtest'
  $memcached_servers    = 'x'
  $neutron_auth_url = 'http://xxx.xxx.xxx.xxx:5000'
  $neutron_endpoint_override = ''  
  $neutron_keystone_authtoken_auth_url = 'http://xxx.xxx.xxx.xxx:5000'
  $neutron_password   = ''
  $nova_keystone_authtoken_auth_url = 'http://xxx.xxx.xxx.xxx:5000'
  $nova_placement_auth_url = 'http://xxx.xxx.xxx.xxx:5000/v3'
  $nova_password  = 'NOVA_PASS'
  $novncproxy_base_url = 'https://xxxxx:6080/vnc_auto.html'
  $placement_password = ''
  $placement_username = 'placement'
  $private_key          = 'id_rsa_controller-01'
  $project_name         = 'service'
  $pub_key              = "ssh-rsa "       
  $transport_url = 'rabbit://openstack:'   
  $www_authenticate_uri = 'https://xxx.xxx.xxx.xxx:443'
}                              }

   ### Setting validi sia per la cloud di test che per quella di produzione
w  
  $allow_resize            = true     
  $allow_overlapping_ips   = true
  $amqp_durable_queues = false
  $auth_strategy = 'keystone'
  $auth_type = 'password'
  $cafile                  = '/etc/grid-security/certificates/cafile.pem'
  $core_plugin = 'ml2'
  

  ###cpu e ram allocation per cld-np-09
   if $::mgmtnw_ip == "" {
        $cpu_allocation_ratio    = '1.0'
        $ram_allocation_ratio    = '1.0'
        }
    else {         
         $cpu_allocation_ratio    = '4.0'
         $ram_allocation_ratio    = '1.5'
         }


  $enable_ipset            = true
  $enable_security_group   = true
  $enable_tunneling        = true       
  $enable_proxy_headers_parsing = true
  $libvirt_cpu_mode        = 'host-passthrough'
  $libvirt_inject_key      = true
  $libvirt_inject_part     = '-1'     
  $libvirt_inject_pass     = true       
  $mechanism_drivers       = 'openvswitch'       
  $my_ip = $::mgmtnw_ip
  $neutron_firewall_driver = 'neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver'       
  $neutron_lock_path               = '/var/lib/neutron/tmp'       
  $neutron_username      = 'neutron'
  $nova_compute_driver = 'libvirt.LibvirtDriver'       
  $nova_disable_compute_service_check_for_ffu = true
  $nova_enabled_apis = 'osapi_compute,metadata'
  $nova_firewall_driver    = 'nova.virt.firewall.NoopFirewallDriver'
  $nova_instance_usage_audit = false
  $nova_instance_usage_audit_period = 'hour'
  $nova_lock_path               = '/var/lib/nova/tmp'
  $nova_log_dir = '/var/log/nova'
  $nova_preallocate_images    	= 'space'
  $nova_state_path = '/var/lib/nova'
  $nova_username         = 'nova'     
  $nova_use_neutron = true
  $ovs_local_ip            = $::datanw_ip       
  $pci_titanxp_VGA = '{"name":"GP102_VGA","product_id":"1b02","vendor_id":"10de","device_type":"type-PCI"}'
  $pci_titanxp_SND = '{"name":"GP102_SND","product_id":"10ef","vendor_id":"10de","device_type":"type-PCI"}'
  $pci_quadro_VGA = '{"name":"QUADRO_VGA","product_id":"1e30","vendor_id":"10de","device_type":"type-PCI"}'
  $pci_quadro_Audio = '{"name":"QUADRO_Audio","product_id":"10f7","vendor_id":"10de","device_type":"type-PCI"}'
  $pci_quadro_USB = '{"name":"QUADRO_USB","product_id":"1ad6","vendor_id":"10de","device_type":"type-PCI"}'
  $pci_quadro_SerialBus = '{"name":"QUADRO_SerialBus","product_id":"1ad7","vendor_id":"10de","device_type":"type-PCI"}'
  $pci_geforcegtx_VGA = '{"name":"GK110_VGA","product_id":"1005","vendor_id":"10de","device_type":"type-PCI"}'
  $pci_geforcegtx_SND = '{"name":"GK110_SND","product_id":"0e1a","vendor_id":"10de","device_type":"type-PCI"}'
  $pci_t4 = '{"name":"T4","product_id":"1eb8","vendor_id":"10de","device_type":"type-PF"}'
  $pci_v100 = '{"name":"V100","product_id":"1df6","vendor_id":"10de","device_type":"type-PCI"}'
  $pci_passthrough_whitelist   = '{\"vendor_id\":\"10de\"}'
  $project_domain_name = 'default'
  $rabbit_ha_queues = false
  $region_name             = 'regionOne'       
  $service_plugins         = 'router'
  $tenant_network_types    = 'gre'
  $tunnel_id_ranges        = '1:1000'
  $tunnel_types            = 'gre'       
  $type_drivers            = 'flat,vlan,gre,vxlan'       
  $user_domain_name = 'default'
  $vnc_server_listen = '0.0.0.0'
  $vnc_enabled = true
  $project_domain_id = 'default'
  $user_domain_id = 'default'

}  

